{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.newsList, news => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: news.id\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'news-detail',\n        params: {\n          id: news.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(news.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","newsList","news","key","id","_createVNode","_component_router_link","to","name","params","title"],"sources":["/home/alif-ndaru/Documents/Workspace/project-test/frontend-app/src/components/ListNews.vue"],"sourcesContent":["<template>\n     <div>\n       <ul>\n         <li v-for=\"news in newsList\" :key=\"news.id\">\n           <router-link :to=\"{ name: 'news-detail', params: { id: news.id } }\">\n             {{ news.title }}\n           </router-link>\n         </li>\n       </ul>\n     </div>\n   </template>\n   \n   <script>\n   import axios from 'axios';\n   \n   export default {\n     data() {\n       return {\n         newsList: [],\n       };\n     },\n     created() {\n       this.fetchNewsList();\n     },\n     methods: {\n       async fetchNewsList() {\n         try {\n           const response = await axios.get('/api/news');\n           this.newsList = response.data;\n         } catch (error) {\n           console.error(error);\n         }\n       },\n     },\n   };\n   </script>\n   "],"mappings":";;;uBACKA,mBAAA,CAQM,cAPJC,mBAAA,CAMK,c,kBALHD,mBAAA,CAIKE,SAAA,QAAAC,WAAA,CAJcC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAfN,mBAAA,CAIK;MAJyBO,GAAG,EAAED,IAAI,CAACE;QACtCC,YAAA,CAEcC,sBAAA;MAFAC,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAL,EAAA,EAAuCF,IAAI,CAACE;QAAE;MAAA;;wBAC5D,MAAgB,C,kCAAbF,IAAI,CAACQ,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}