{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"List of News\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.newsList, news => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: news.id\n    }, _toDisplayString(news.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","newsList","news","key","id","title"],"sources":["/home/alif-ndaru/Documents/Workspace/project-test/frontend-app/src/view/ListNews.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>List of News</h2>\n    <ul>\n      <li v-for=\"news in newsList\" :key=\"news.id\">{{ news.title }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ListNews',\n  data() {\n    return {\n      newsList: [],\n    };\n  },\n  mounted() {\n    this.fetchNews();\n  },\n  methods: {\n    async fetchNews() {\n      try {\n        const response = await fetch('http://localhost:8080/api/news');\n        const data = await response.json();\n        this.newsList = data;\n      } catch (error) {\n        console.error('Error fetching news:', error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAqB,YAAjB,cAAY;;;uBADlBC,mBAAA,CAKM,cAJJC,UAAqB,EACrBF,mBAAA,CAEK,c,kBADHC,mBAAA,CAAiEE,SAAA,QAAAC,WAAA,CAA9CC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAfN,mBAAA,CAAiE;MAAnCO,GAAG,EAAED,IAAI,CAACE;wBAAOF,IAAI,CAACG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}